{"version":3,"file":"static/js/624.6c1e4d07.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","Pages/MovieInfoPage.jsx","components/Service/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieCard_container__4KN1P\",\"poster\":\"MovieCard_poster__B9RSd\",\"infoContainer\":\"MovieCard_infoContainer__tXrEG\",\"title\":\"MovieCard_title__mQEBM\",\"releaseDate\":\"MovieCard_releaseDate__qS1DG\",\"userScore\":\"MovieCard_userScore__9QycZ\",\"reviewTitle\":\"MovieCard_reviewTitle__vVyam\",\"review\":\"MovieCard_review__nrocI\",\"genre\":\"MovieCard_genre__k3oyu\",\"genreList\":\"MovieCard_genreList__2RqcD\",\"genreItem\":\"MovieCard_genreItem__0Cgvp\"};","import { getMovieFullInfo } from \"components/Service/API\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useLocation, useParams } from \"react-router-dom\"\nimport css from './MovieCard.module.css'\n\nexport const MovieCard = () => {\n    const [movie, setMovie] = useState([])\n    const { movieId } = useParams()\n     const location = useLocation()\n    useEffect(() => {\n        const getMovieById = async() => {\n            const movie = await getMovieFullInfo(movieId)\n            setMovie(movie)\n        }\n       getMovieById()\n}, [movieId])\n\n    const { poster_path, title, vote_average, release_date, overview, genres } = movie;\n    return (\n        <>\n            <Link\n                style={{\n                    textDecoration: 'none',\n                    color: '#4a4a4a',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    backgroundColor: '#f7f7f7',\n                    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.1)',\n                    transition: 'all 0.2s ease-in-out',\n                    marginRight: '16px',\n                    marginBottom: '16px',\n  }}\n                to={location.state?.from ?? '/'}\n            >Go back</Link>\n            <div className={css.container}>\n                <img\n                    className={css.poster}\n          src={poster_path&&`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width=\"200\"\n                />\n                <div className={css.infoContainer}>\n                    <span className={css.title}>{title}</span>\n                    <span className={css.releaseDate}>{release_date}</span>\n                    <p className={css.userScore}>User Score: {Math.round(vote_average * 10)}%</p>\n                    <p className={css.reviewTitle}>Overview</p>\n                    <p className={css.review}>{overview}</p>\n                    <p className={css.genre}>Genres</p>\n                    <p className={css.genreList}>\n                        {genres&&genres.map(genre => (\n                            <span className={css.genreItem} key={genre.id}>{genre.name}</span>)\n                        )}\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n} ","import { MovieCard } from \"components/MovieCard/MovieCard\"\nimport { Link, Outlet, useLocation} from \"react-router-dom\"\n\nconst MovieInfoPage = () => {\n   const location = useLocation()\n    \n    return (\n        <>\n            <MovieCard />\n            <Link\n                style={{\n                    textDecoration: 'none',\n                    color: '#0077c0',\n                    fontSize: '14px',\n                    fontWeight: '500',\n                    padding: '6px 12px',\n                    borderRadius: '4px',\n                    backgroundColor: '#f5f9ff',\n                    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.1)',\n                    transition: 'all 0.2s ease-in-out',\n                    marginRight: '16px',\n                    marginBottom: '16px',\n  }}\n            to=\"cast\"\n                state={location.state ?? '/'}>Cast</Link>\n            <Link\n                style={{\n                    textDecoration: 'none',\n                    color: '#0077c0',\n                    fontSize: '14px',\n                    fontWeight: '500',\n                    padding: '6px 12px',\n                    borderRadius: '4px',\n                    backgroundColor: '#f5f9ff',\n                    boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.1)',\n                    transition: 'all 0.2s ease-in-out',\n                    marginRight: '16px',\n                    marginBottom: '16px',\n  }}\n                to='reviews'\n                state={location.state ?? '/'}>Reviews</Link>\n            \n          <Outlet />\n            \n        </>\n    )\n}\n\nexport default MovieInfoPage","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst MY_KEY = \"5d690f0bfcc9395ff58e80bfc32ac0d9\"\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    try {\n        const promise = await axios.get(`trending/movie/day?api_key=${MY_KEY}`)\n        return promise.data.results;\n        \n    } catch (error) {\n       toast('Movies not found')\n    }\n}\n\nexport const getByQuery = async (query) => {\n    try {\n        const promise = await axios.get(`search/movie?api_key=${MY_KEY}&query=${query}`)\n        return promise.data.results;\n    } catch (error) {\n       toast('Movies not found') \n    }\n}\n\nexport const getMovieFullInfo = async (id)=> {\n    try {\n        const promise = await axios.get(`movie/${id}?api_key=${MY_KEY}`)\n        return promise.data\n    } catch (error) {\n       toast('Movies not found')  \n    }\n}\n\nexport const getCast = async (id) => {\n    try {\n        const promise = await axios.get(`/movie/${id}/credits?api_key=${MY_KEY}`)\n        return promise.data.cast;\n    } catch (error) {\n         \n    }\n}\n\nexport const getReviews = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${MY_KEY}`);\n        return response.data.results;  \n    } catch (error) {\n       toast('Movies not found')  \n    }\n \n}\n"],"names":["MovieCard","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieById","getMovieFullInfo","poster_path","title","vote_average","release_date","overview","genres","style","textDecoration","color","fontSize","fontWeight","padding","borderRadius","backgroundColor","boxShadow","transition","marginRight","marginBottom","to","state","from","className","css","src","alt","width","Math","round","map","genre","name","id","MY_KEY","axios","getTrending","promise","data","results","toast","getByQuery","query","getCast","cast","getReviews","response"],"sourceRoot":""}