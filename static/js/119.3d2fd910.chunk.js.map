{"version":3,"file":"static/js/119.3d2fd910.chunk.js","mappings":"6PACA,EAAuB,2BAAvB,EAAyD,2B,SCI5CA,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAE,qGACJC,EAAAA,EAAAA,MADI,OACjBC,EADiB,OAEzBJ,EAAUI,GAFe,2CAAF,qDAIxBF,GACN,GAAE,KAGK,+BACI,eAAIG,UAAWC,EAAf,SACKP,EAAOQ,KAAI,SAAAC,GACR,OAAO,eAAIH,UAAWC,EAAf,UAAwC,SAAC,KAAD,CAC3CG,GAAE,kBAAaD,EAAME,GAAGC,YACxBC,MAAO,CAAEC,KAAMjB,GAF4B,SAG7CY,EAAMM,SAH6BN,EAAME,GAI9C,OAIhB,EChBD,EATiB,WACb,OACI,+BACI,SAACf,EAAD,KAIX,C,uMCPKoB,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMb,EAAW,mCAAG,6GAEGa,EAAAA,EAAAA,IAAA,qCAAwCD,IAF3C,cAEbE,EAFa,yBAGZA,EAAQb,KAAKc,SAHD,iCAMpBC,EAAAA,EAAAA,IAAM,oBANc,yDAAH,qDAUXC,EAAU,mCAAG,WAAOC,GAAP,gGAEIL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAAkDM,IAFtD,cAEZJ,EAFY,yBAGXA,EAAQb,KAAKc,SAHF,iCAKnBC,EAAAA,EAAAA,IAAM,oBALa,yDAAH,sDASVG,EAAgB,mCAAG,WAAOZ,GAAP,gGAEFM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCK,IAF/B,cAElBE,EAFkB,yBAGjBA,EAAQb,MAHS,iCAKzBe,EAAAA,EAAAA,IAAM,oBALmB,yDAAH,sDAShBI,EAAO,mCAAG,WAAOb,GAAP,gGAEOM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,4BAA0CK,IAFjD,cAETE,EAFS,yBAGRA,EAAQb,KAAKoB,MAHL,wFAAH,sDASPC,EAAU,mCAAG,WAAOf,GAAP,gGAEKM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,4BAA0CK,IAF/C,cAEZW,EAFY,yBAGXA,EAAStB,KAAKc,SAHH,iCAKnBC,EAAAA,EAAAA,IAAM,oBALa,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/TrendingList/TrendingList.module.css?033c","components/TrendingList/TrendingList.jsx","Pages/HomePage.jsx","Service/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendingList_list__7xRuf\",\"item\":\"TrendingList_item__mbDYf\"};","import { getTrending } from \"Service/API\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport css from './TrendingList.module.css'\n\nexport const TrendingList = () => {\n    const location = useLocation();\n    const [movies, setMovies] = useState([])\n    useEffect(() => {\n        const getTrendingMovies= async()=> {\n          const data = await getTrending()\n        setMovies(data)    \n        }\n       getTrendingMovies()    \n}, [])\n\n    return (\n        <>\n            <ul className={css.list}>\n                {movies.map(movie => {\n                    return <li className={css.item} key={movie.id}><Link\n                        to={`/movies/${movie.id.toString()}`}\n                        state={{ from: location }}\n                    >{movie.title}</Link></li> \n                })}\n            </ul>\n        </>\n    )\n}","\nimport { TrendingList } from \"../components/TrendingList/TrendingList\";\n\nconst HomePage = () => {\n    return (\n        <>\n            <TrendingList />\n            \n        </>\n    )\n}\n\nexport default HomePage","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst MY_KEY = \"5d690f0bfcc9395ff58e80bfc32ac0d9\"\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    try {\n        const promise = await axios.get(`trending/movie/day?api_key=${MY_KEY}`)\n        return promise.data.results;\n        \n    } catch (error) {\n       toast('Movies not found')\n    }\n}\n\nexport const getByQuery = async (query) => {\n    try {\n        const promise = await axios.get(`search/movie?api_key=${MY_KEY}&query=${query}`)\n        return promise.data.results;\n    } catch (error) {\n       toast('Movies not found') \n    }\n}\n\nexport const getMovieFullInfo = async (id)=> {\n    try {\n        const promise = await axios.get(`movie/${id}?api_key=${MY_KEY}`)\n        return promise.data\n    } catch (error) {\n       toast('Movies not found')  \n    }\n}\n\nexport const getCast = async (id) => {\n    try {\n        const promise = await axios.get(`/movie/${id}/credits?api_key=${MY_KEY}`)\n        return promise.data.cast;\n    } catch (error) {\n         \n    }\n}\n\nexport const getReviews = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${MY_KEY}`);\n        return response.data.results;  \n    } catch (error) {\n       toast('Movies not found')  \n    }\n \n}\n"],"names":["TrendingList","location","useLocation","useState","movies","setMovies","useEffect","getTrendingMovies","getTrending","data","className","css","map","movie","to","id","toString","state","from","title","MY_KEY","axios","promise","results","toast","getByQuery","query","getMovieFullInfo","getCast","cast","getReviews","response"],"sourceRoot":""}