{"version":3,"file":"static/js/14.0252aff8.chunk.js","mappings":"kOACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA0F,2BAA1F,EAA4H,wBAA5H,EAA2J,wB,SCG9IA,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEtB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYD,OACI,+BACI,kBACIC,UAAWC,EACXL,SAdS,SAACM,GACtBA,EAAEC,iBACFP,EAASE,GACTC,EAAS,GACV,EAQS,WAGI,kBACIC,UAAWC,EACXG,SAXS,SAACF,GACvBH,EAASG,EAAEG,OAAOC,MACpB,EAS2CC,KAAK,UACrC,mBACIP,UAAWC,EACXM,KAAK,SAFT,wBAQf,E,yBC2BD,EAvDmB,WACjB,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOW,EAAP,KAAiBC,EAAjB,KACE,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhB,EAAQe,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACTT,GAAU,EACb,GAAE,KAEAS,EAAAA,EAAAA,YAAU,WACN,IAAiB,IAAbV,GAAqBV,EACrB,IACG,IAAMqB,EAAgB,mCAAG,qGACKC,EAAAA,EAAAA,IAAWtB,GADhB,OAClBuB,EADkB,OAExBV,EAAUU,GACTZ,GAAU,GAHa,2CAAH,qDAMzBU,GAGC,CAFC,MAAOG,GACLC,QAAQC,IAAI,QACf,CAGR,GAAE,CAAC1B,EAAOU,IAOX,OACI,iCACI,SAACb,EAAD,CACIC,SARW,SAACE,GACxBgB,EAAgB,CAAEhB,MAAAA,IAClBW,GAAU,EACb,EAMeX,MAAOA,KAEV,eACDE,UAAWC,EADV,SAGIS,EAAOe,KAAI,SAAAC,GACR,OAAO,eACH1B,UAAWC,EADR,UAEY,SAAC,KAAD,CACf0B,GAAE,kBAAaD,EAAME,GAAGC,YACxBC,MAAO,CAAEC,KAAMf,GAFA,SAGjBU,EAAMM,SAHCN,EAAME,GAIlB,QAIhB,C,uMCxDKK,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,6GAEGD,EAAAA,EAAAA,IAAA,qCAAwCD,IAF3C,cAEbG,EAFa,yBAGZA,EAAQC,KAAKC,SAHD,iCAMpBC,EAAAA,EAAAA,IAAM,oBANc,yDAAH,qDAUXnB,EAAU,mCAAG,WAAOtB,GAAP,gGAEIoC,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAAkDnC,IAFtD,cAEZsC,EAFY,yBAGXA,EAAQC,KAAKC,SAHF,iCAKnBC,EAAAA,EAAAA,IAAM,oBALa,yDAAH,sDASVC,EAAgB,mCAAG,WAAOZ,GAAP,gGAEFM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCK,IAF/B,cAElBG,EAFkB,yBAGjBA,EAAQC,MAHS,iCAKzBE,EAAAA,EAAAA,IAAM,oBALmB,yDAAH,sDAShBE,EAAO,mCAAG,WAAOb,GAAP,gGAEOM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,4BAA0CK,IAFjD,cAETG,EAFS,yBAGRA,EAAQC,KAAKK,MAHL,wFAAH,sDASPC,EAAU,mCAAG,WAAOf,GAAP,gGAEKM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,4BAA0CK,IAF/C,cAEZW,EAFY,yBAGXA,EAASP,KAAKC,SAHH,iCAKnBC,EAAAA,EAAAA,IAAM,oBALa,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","Pages/MoviesPage.jsx","Service/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"formBtn\":\"SearchBar_formBtn__Z+YNJ\",\"list\":\"SearchBar_list__eXPLO\",\"item\":\"SearchBar_item__plclD\"};","\nimport { useState } from 'react';\nimport css from './SearchBar.module.css'\n\nexport const SearchBar = ({onSubmit}) => {\n    \n     const [query, setQuery] = useState('');\n    \n     const handleSubmit =(e)=> {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  }\n   \n    const handleInputValue = (e) => {\n       setQuery(e.target.value) \n    }\n   \n    return (\n        <>\n            <form\n                className={css.form}\n                onSubmit={handleSubmit}>\n                <input\n                    className={css.input}\n                    onChange={handleInputValue} type=\"text\" />\n                <button\n                    className={css.formBtn}\n                    type=\"submit\">Search</button>\n            </form>\n           \n        </>\n    )\n\n}","import { SearchBar } from \"components/SearchBar/SearchBar\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getByQuery } from \"Service/API\";\nimport css from '../components/SearchBar/SearchBar.module.css'\n\nconst MoviesPage = () => {\n  const [submited, setSubmit] = useState(false);\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query')\n    const location = useLocation()\n \n    useEffect(() => {\n     setSubmit(true)\n }, [])\n\n    useEffect(() => {\n        if (submited === true && query) {\n            try {\n               const getMoviesByQuery = async () => {\n                const searchedMovies = await getByQuery(query)\n                setMovies(searchedMovies) \n                 setSubmit(false)\n            }\n         \n            getMoviesByQuery() \n            } catch (error) {\n                console.log('error');\n            }\n            \n        }\n    }, [query, submited])\n    \n    const submitListener = (query) => {\n    setSearchParams({ query })\n    setSubmit(true)\n}\n \n    return (\n        <>\n            <SearchBar\n                onSubmit={submitListener}\n                query={query}\n            />\n             <ul\n            className={css.list}\n            >\n                {movies.map(movie => {\n                    return <li\n                        className={css.item}\n                        key={movie.id}><Link\n                        to={`/movies/${movie.id.toString()}`}\n                        state={{ from: location }}\n                    >{movie.title}</Link></li>\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default MoviesPage","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst MY_KEY = \"5d690f0bfcc9395ff58e80bfc32ac0d9\"\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    try {\n        const promise = await axios.get(`trending/movie/day?api_key=${MY_KEY}`)\n        return promise.data.results;\n        \n    } catch (error) {\n       toast('Movies not found')\n    }\n}\n\nexport const getByQuery = async (query) => {\n    try {\n        const promise = await axios.get(`search/movie?api_key=${MY_KEY}&query=${query}`)\n        return promise.data.results;\n    } catch (error) {\n       toast('Movies not found') \n    }\n}\n\nexport const getMovieFullInfo = async (id)=> {\n    try {\n        const promise = await axios.get(`movie/${id}?api_key=${MY_KEY}`)\n        return promise.data\n    } catch (error) {\n       toast('Movies not found')  \n    }\n}\n\nexport const getCast = async (id) => {\n    try {\n        const promise = await axios.get(`/movie/${id}/credits?api_key=${MY_KEY}`)\n        return promise.data.cast;\n    } catch (error) {\n         \n    }\n}\n\nexport const getReviews = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${MY_KEY}`);\n        return response.data.results;  \n    } catch (error) {\n       toast('Movies not found')  \n    }\n \n}\n"],"names":["SearchBar","onSubmit","useState","query","setQuery","className","css","e","preventDefault","onChange","target","value","type","submited","setSubmit","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","getMoviesByQuery","getByQuery","searchedMovies","error","console","log","map","movie","to","id","toString","state","from","title","MY_KEY","axios","getTrending","promise","data","results","toast","getMovieFullInfo","getCast","cast","getReviews","response"],"sourceRoot":""}